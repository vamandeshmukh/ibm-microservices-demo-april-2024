2024-04-21T18:59:25.444+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T18:59:25.446+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T18:59:25.491+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-04-21T18:59:25.492+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-04-21T18:59:25.966+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T18:59:26.053+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 1 MongoDB repository interface.
2024-04-21T18:59:26.189+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e08e8e69-d985-33fc-bbd3-517e56a8dfa0
2024-04-21T18:59:26.308+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T18:59:26.309+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.310+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.314+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.316+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.317+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.319+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.323+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.329+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.330+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.331+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.332+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.335+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.341+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.341+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.342+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.343+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.343+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T18:59:26.565+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T18:59:26.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T18:59:26.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T18:59:26.611+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T18:59:26.611+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1118 ms
2024-04-21T18:59:26.740+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T18:59:26.756+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='662514b6dc45b825f356d596', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17424300}
2024-04-21T18:59:26.850+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T18:59:27.407+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T18:59:27.507+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T18:59:27.538+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T18:59:27.561+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T18:59:27.565+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T18:59:27.577+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T18:59:27.784+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T18:59:27.786+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T18:59:27.789+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T18:59:27.791+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706167790 with initial instances count: 2
2024-04-21T18:59:27.792+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T18:59:27.793+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706167793, current=UP, previous=STARTING]
2024-04-21T18:59:27.795+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T18:59:27.820+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T18:59:27.821+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T18:59:27.835+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T18:59:27.897+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 2.802 seconds (process running for 3.365)
2024-04-21T19:01:19.570+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:01:19.571+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:01:19.573+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-04-21T19:01:20.125+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-10] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 263 ms
2024-04-21T19:03:14.522+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-04-21T19:03:14.523+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:03:14.523+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706394523, current=DOWN, previous=UP]
2024-04-21T19:03:14.523+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:03:14.535+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:03:14.538+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:03:17.556+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:03:17.573+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:03:17.575+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-1] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:03:17.670+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:03:17.670+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:03:17.771+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:03:17.775+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 1 MongoDB repository interface.
2024-04-21T19:03:17.808+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e08e8e69-d985-33fc-bbd3-517e56a8dfa0
2024-04-21T19:03:17.815+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:03:17.816+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.816+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.817+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.817+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.817+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.818+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.820+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.821+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.822+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.822+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.822+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.823+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.824+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.825+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.825+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.825+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.826+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:03:17.851+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:03:17.852+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:03:17.852+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:03:17.873+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:03:17.874+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 203 ms
2024-04-21T19:03:17.889+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:03:17.890+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='6625159ddc45b825f356d597', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1135400}
2024-04-21T19:03:17.903+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:03:18.047+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:03:18.095+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:03:18.109+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:03:18.111+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:03:18.111+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:03:18.114+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:03:18.115+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:03:18.127+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:03:18.128+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:03:18.129+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:03:18.129+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706398129 with initial instances count: 4
2024-04-21T19:03:18.130+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:03:18.130+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706398130, current=UP, previous=STARTING]
2024-04-21T19:03:18.130+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:03:18.132+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:03:18.133+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:03:18.139+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:03:18.183+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.571 seconds (process running for 233.651)
2024-04-21T19:03:18.185+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:04:23.716+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 13 class path changes (0 additions, 0 deletions, 13 modifications)
2024-04-21T19:04:23.717+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:04:23.717+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706463717, current=DOWN, previous=UP]
2024-04-21T19:04:23.717+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:04:23.727+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:04:23.734+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:04:23.736+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:04:23.740+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:04:23.744+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-7] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:04:23.931+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:04:23.931+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:04:24.153+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:04:24.159+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 1 MongoDB repository interface.
2024-04-21T19:04:24.234+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e08e8e69-d985-33fc-bbd3-517e56a8dfa0
2024-04-21T19:04:24.245+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:04:24.245+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.246+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.247+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.248+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.248+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.249+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.253+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.254+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.255+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.255+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.255+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.256+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.257+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.258+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.258+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.258+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.258+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:04:24.295+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:04:24.295+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:04:24.296+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:04:24.318+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:04:24.318+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 384 ms
2024-04-21T19:04:24.346+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:04:24.355+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='662515e0dc45b825f356d598', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5585500}
2024-04-21T19:04:24.379+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:04:24.629+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:04:24.710+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:04:24.724+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:04:24.727+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:04:24.727+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:04:24.728+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:04:24.745+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:04:24.747+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:04:24.747+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:04:24.748+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706464748 with initial instances count: 3
2024-04-21T19:04:24.749+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:04:24.749+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706464749, current=UP, previous=STARTING]
2024-04-21T19:04:24.749+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:04:24.753+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:04:24.753+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:04:24.760+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:04:24.823+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 1.033 seconds (process running for 300.292)
2024-04-21T19:04:24.824+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:05:20.848+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2024-04-21T19:05:20.850+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:05:20.850+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706520850, current=DOWN, previous=UP]
2024-04-21T19:05:20.850+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:05:20.857+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:05:20.863+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:05:20.864+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:05:20.867+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:05:20.871+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-13] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:05:20.964+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:05:20.964+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:05:21.055+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:05:21.057+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2024-04-21T19:05:21.082+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=666e493f-bf3e-30e1-983e-cb0ee64438ec
2024-04-21T19:05:21.087+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:05:21.088+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.088+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.089+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.089+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.089+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.089+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.091+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.092+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.092+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.092+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.092+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.092+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.093+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.094+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.094+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.094+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.094+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:05:21.116+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:05:21.116+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:05:21.116+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:05:21.129+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:05:21.130+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 165 ms
2024-04-21T19:05:21.141+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:05:21.142+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='66251619dc45b825f356d599', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1225000}
2024-04-21T19:05:21.151+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:05:21.278+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:05:21.326+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:05:21.333+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:05:21.334+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:05:21.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:05:21.345+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:05:21.346+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:05:21.347+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:05:21.347+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706521347 with initial instances count: 4
2024-04-21T19:05:21.348+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:05:21.348+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706521348, current=UP, previous=STARTING]
2024-04-21T19:05:21.348+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:05:21.349+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:05:21.350+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:05:21.358+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:05:21.399+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.49 seconds (process running for 356.867)
2024-04-21T19:05:21.400+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:05:51.366+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - Re-registering apps/IBM-DOCTOR-SERVICE
2024-04-21T19:05:51.366+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:05:51.367+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:05:51.370+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:05:51.371+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:06:46.210+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-04-21T19:06:46.210+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:06:46.211+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706606211, current=DOWN, previous=UP]
2024-04-21T19:06:46.211+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:06:46.219+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:06:46.225+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:06:46.226+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:06:46.229+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:06:46.231+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-19] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:06:46.318+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:06:46.318+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:06:46.403+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:06:46.406+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2024-04-21T19:06:46.431+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=666e493f-bf3e-30e1-983e-cb0ee64438ec
2024-04-21T19:06:46.437+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:06:46.438+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.438+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.439+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.439+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.439+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.439+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.441+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.441+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.442+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.442+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.442+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.443+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.444+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.445+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.445+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.446+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.446+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:06:46.477+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:06:46.477+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:06:46.477+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:06:46.492+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:06:46.492+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 173 ms
2024-04-21T19:06:46.502+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:06:46.504+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='6625166edc45b825f356d59a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1430600}
2024-04-21T19:06:46.510+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:06:46.635+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:06:46.681+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:06:46.688+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:06:46.689+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:06:46.689+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:06:46.690+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:06:46.698+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:06:46.699+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:06:46.699+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:06:46.700+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706606700 with initial instances count: 4
2024-04-21T19:06:46.700+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:06:46.700+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706606700, current=UP, previous=STARTING]
2024-04-21T19:06:46.700+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:06:46.703+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:06:46.703+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:06:46.708+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:06:46.751+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.487 seconds (process running for 442.219)
2024-04-21T19:06:46.752+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:06:54.171+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:06:54.171+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:06:54.172+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-21T19:07:16.734+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - Re-registering apps/IBM-DOCTOR-SERVICE
2024-04-21T19:07:16.734+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:07:16.737+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:07:43.757+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-04-21T19:07:43.758+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:07:43.758+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706663758, current=DOWN, previous=UP]
2024-04-21T19:07:43.759+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:07:43.766+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:07:43.773+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:07:43.774+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:07:43.777+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:07:43.778+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-25] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:07:43.874+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:07:43.874+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:07:43.973+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:07:43.975+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2024-04-21T19:07:44.011+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=666e493f-bf3e-30e1-983e-cb0ee64438ec
2024-04-21T19:07:44.019+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:07:44.020+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.020+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.021+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.021+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.021+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.022+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.023+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.024+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.025+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.025+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.026+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.026+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.027+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.028+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.028+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.028+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.028+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:07:44.051+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:07:44.052+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:07:44.052+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:07:44.067+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:07:44.067+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 192 ms
2024-04-21T19:07:44.078+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:07:44.080+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='662516a8dc45b825f356d59b', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1410800}
2024-04-21T19:07:44.087+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:07:44.216+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:07:44.263+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:07:44.272+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:07:44.273+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:07:44.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:07:44.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:07:44.284+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:07:44.284+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706664284 with initial instances count: 4
2024-04-21T19:07:44.285+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:07:44.285+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706664285, current=UP, previous=STARTING]
2024-04-21T19:07:44.285+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:07:44.288+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:07:44.288+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:07:44.293+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:07:44.335+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.517 seconds (process running for 499.804)
2024-04-21T19:07:44.336+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:08:14.969+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 5 class path changes (1 addition, 1 deletion, 3 modifications)
2024-04-21T19:08:14.971+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:08:14.972+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706694972, current=DOWN, previous=UP]
2024-04-21T19:08:14.972+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:08:14.978+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:08:14.984+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:08:17.989+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:08:18.008+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:08:18.010+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-31] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:08:18.116+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:08:18.116+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:08:18.196+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:08:18.199+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2024-04-21T19:08:18.224+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:08:18.229+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:08:18.230+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.230+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.231+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.231+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.231+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.231+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.233+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.233+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.234+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.234+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.234+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.234+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.235+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.235+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.235+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.236+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.236+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:18.255+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:08:18.255+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:08:18.255+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:08:18.270+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:08:18.270+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 153 ms
2024-04-21T19:08:18.280+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:08:18.282+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='662516cadc45b825f356d59c', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1601600}
2024-04-21T19:08:18.287+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:08:18.408+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:08:18.458+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:08:18.468+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:08:18.469+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:08:18.469+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:08:18.470+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:08:18.478+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:08:18.479+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:08:18.480+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:08:18.481+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706698481 with initial instances count: 4
2024-04-21T19:08:18.482+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:08:18.482+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706698482, current=UP, previous=STARTING]
2024-04-21T19:08:18.482+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:08:18.484+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:08:18.484+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:08:18.496+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:08:18.533+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.486 seconds (process running for 534.001)
2024-04-21T19:08:18.534+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:08:19.783+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-04-21T19:08:19.784+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:08:19.784+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706699784, current=DOWN, previous=UP]
2024-04-21T19:08:19.785+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:08:19.789+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:08:19.796+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:08:22.804+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:08:22.821+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:08:22.822+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-37] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:08:22.912+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:08:22.912+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:08:22.998+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:08:23.001+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 1 MongoDB repository interface.
2024-04-21T19:08:23.029+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:08:23.034+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:08:23.035+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.035+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.035+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.036+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.036+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.036+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.037+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.038+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.038+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.038+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.038+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.039+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.040+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.040+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.040+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.040+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.040+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:08:23.061+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:08:23.061+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:08:23.061+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:08:23.076+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:08:23.076+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 163 ms
2024-04-21T19:08:23.086+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:08:23.088+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='662516cfdc45b825f356d59d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1245300}
2024-04-21T19:08:23.095+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:08:23.227+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:08:23.274+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:08:23.282+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:08:23.283+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:08:23.292+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:08:23.292+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:08:23.293+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:08:23.293+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713706703293 with initial instances count: 4
2024-04-21T19:08:23.294+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:08:23.294+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713706703294, current=UP, previous=STARTING]
2024-04-21T19:08:23.294+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:08:23.295+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:08:23.296+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:08:23.302+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:08:23.345+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.487 seconds (process running for 538.812)
2024-04-21T19:08:23.345+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:08:33.939+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:08:33.939+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:08:33.940+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-21T19:09:10.017+05:30  INFO 16820 --- [ibm-doctor-service] [http-nio-9003-exec-2] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 87 ms
2024-04-21T19:13:23.287+05:30  INFO 16820 --- [ibm-doctor-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:18:23.297+05:30  INFO 16820 --- [ibm-doctor-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:23:23.301+05:30  INFO 16820 --- [ibm-doctor-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:24:37.918+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 14 class path changes (0 additions, 14 deletions, 0 modifications)
2024-04-21T19:24:37.925+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:24:37.926+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707677926, current=DOWN, previous=UP]
2024-04-21T19:24:37.928+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:24:37.978+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:24:38.005+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:24:41.014+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:24:41.033+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:24:41.037+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-43] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:24:41.397+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:24:41.397+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:24:42.206+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:24:42.236+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 1 MongoDB repository interface.
2024-04-21T19:24:42.637+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:24:42.744+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:24:42.751+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.755+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.763+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.766+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.768+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.772+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.787+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.796+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.797+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.798+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.798+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.799+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.811+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.814+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.816+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.828+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:42.829+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:43.122+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:24:43.124+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:24:43.125+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:24:43.233+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:24:43.233+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1832 ms
2024-04-21T19:24:43.342+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:24:43.390+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='66251aa3dc45b825f356d59e', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28938000}
2024-04-21T19:24:43.478+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:24:44.589+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:24:45.063+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:24:45.132+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:24:45.141+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:24:45.142+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:24:45.145+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:24:45.146+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:24:45.192+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:24:45.194+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:24:45.196+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:24:45.208+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713707685208 with initial instances count: 4
2024-04-21T19:24:45.211+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:24:45.211+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707685211, current=UP, previous=STARTING]
2024-04-21T19:24:45.212+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:24:45.224+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:24:45.226+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:24:45.246+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:24:45.622+05:30  INFO 16820 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 14 class path changes (14 additions, 0 deletions, 0 modifications)
2024-04-21T19:24:46.114+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 4.967 seconds (process running for 1521.582)
2024-04-21T19:24:46.116+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:24:46.117+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707686117, current=DOWN, previous=UP]
2024-04-21T19:24:46.117+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:24:46.126+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:24:46.130+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:24:46.171+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:24:49.179+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:24:49.198+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:24:49.203+05:30  INFO 16820 --- [ibm-doctor-service] [Thread-49] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:24:49.573+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 16820 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:24:49.574+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:24:49.985+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:24:49.998+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12 ms. Found 1 MongoDB repository interface.
2024-04-21T19:24:50.133+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:24:50.164+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:24:50.167+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.168+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.172+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.173+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.174+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec3b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.176+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.183+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.186+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.187+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.188+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.189+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.190+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.197+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.199+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.200+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.201+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.202+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:24:50.315+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:24:50.316+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:24:50.317+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:24:50.380+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:24:50.381+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 804 ms
2024-04-21T19:24:50.419+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@790457bd, com.mongodb.Jep395RecordCodecProvider@3bd045ec, com.mongodb.KotlinCodecProvider@1642416c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:24:50.423+05:30  INFO 16820 --- [ibm-doctor-service] [cluster-ClusterId{value='66251aaadc45b825f356d59f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2559000}
2024-04-21T19:24:50.460+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2024-04-21T19:24:51.161+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:24:51.521+05:30  WARN 16820 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:24:51.564+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:24:51.569+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:24:51.570+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:24:51.572+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:24:51.616+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:24:51.618+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:24:51.620+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:24:51.622+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713707691622 with initial instances count: 4
2024-04-21T19:24:51.624+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:24:51.624+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707691624, current=UP, previous=STARTING]
2024-04-21T19:24:51.625+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:24:51.635+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:24:51.636+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:24:51.664+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:24:51.954+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 2.651 seconds (process running for 1527.422)
2024-04-21T19:24:51.958+05:30  INFO 16820 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:26:02.007+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2024-04-21T19:26:02.007+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:26:02.008+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707762008, current=DOWN, previous=UP]
2024-04-21T19:26:02.008+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:26:02.016+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:26:02.024+05:30  INFO 16820 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:26:02.024+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:26:02.026+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:26:02.027+05:30  INFO 16820 --- [ibm-doctor-service] [RMI TCP Connection(60)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:26:58.664+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 5388 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:26:58.666+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:26:58.705+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-04-21T19:26:58.705+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-04-21T19:26:59.156+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:26:59.235+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 1 MongoDB repository interface.
2024-04-21T19:26:59.357+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:26:59.469+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:26:59.471+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.471+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.475+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.477+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.478+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec338] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.480+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.484+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.488+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.489+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.490+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.492+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.494+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.498+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.499+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.500+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.501+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.502+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:26:59.714+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:26:59.721+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:26:59.721+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:26:59.760+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:26:59.761+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1056 ms
2024-04-21T19:26:59.889+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@54416600, com.mongodb.Jep395RecordCodecProvider@625f6e35, com.mongodb.KotlinCodecProvider@4b8dac8b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:26:59.895+05:30  INFO 5388 --- [ibm-doctor-service] [cluster-ClusterId{value='66251b2b2f74ef343b32b648', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15007400}
2024-04-21T19:26:59.985+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-04-21T19:27:00.506+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:27:00.598+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:27:00.631+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:27:00.654+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:27:00.657+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:27:00.674+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:27:00.917+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:27:00.921+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:27:00.923+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:27:00.927+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713707820926 with initial instances count: 1
2024-04-21T19:27:00.928+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:27:00.928+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707820928, current=UP, previous=STARTING]
2024-04-21T19:27:00.930+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:27:00.974+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:27:00.975+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:27:00.992+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:27:01.088+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 2.76 seconds (process running for 3.261)
2024-04-21T19:28:19.206+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:28:19.207+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:28:19.209+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-04-21T19:29:16.024+05:30  INFO 5388 --- [ibm-doctor-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 14 class path changes (0 additions, 0 deletions, 14 modifications)
2024-04-21T19:29:16.026+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:29:16.027+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707956027, current=DOWN, previous=UP]
2024-04-21T19:29:16.027+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:29:16.040+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:29:16.042+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:29:19.061+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:29:19.076+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:29:19.080+05:30  INFO 5388 --- [ibm-doctor-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:29:19.175+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 5388 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:29:19.176+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:29:19.279+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:29:19.284+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 1 MongoDB repository interface.
2024-04-21T19:29:19.316+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:29:19.324+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:29:19.325+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.325+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.326+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.327+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.327+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008004ec338] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.327+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.329+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.330+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.331+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.331+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.331+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.332+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.333+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.334+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.334+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.334+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.334+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:29:19.358+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:29:19.358+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:29:19.358+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:29:19.371+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:29:19.371+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 194 ms
2024-04-21T19:29:19.387+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@54416600, com.mongodb.Jep395RecordCodecProvider@625f6e35, com.mongodb.KotlinCodecProvider@4b8dac8b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:29:19.388+05:30  INFO 5388 --- [ibm-doctor-service] [cluster-ClusterId{value='66251bb72f74ef343b32b649', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1084900}
2024-04-21T19:29:19.398+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-04-21T19:29:19.552+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:29:19.625+05:30  WARN 5388 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:29:19.640+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:29:19.642+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:29:19.642+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:29:19.646+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:29:19.662+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:29:19.663+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:29:19.664+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:29:19.665+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713707959665 with initial instances count: 4
2024-04-21T19:29:19.665+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:29:19.666+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713707959666, current=UP, previous=STARTING]
2024-04-21T19:29:19.666+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:29:19.669+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:29:19.670+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:29:19.677+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:29:19.725+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 0.607 seconds (process running for 141.899)
2024-04-21T19:29:19.727+05:30  INFO 5388 --- [ibm-doctor-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-04-21T19:29:38.489+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:29:38.489+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:29:38.490+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-04-21T19:31:02.868+05:30  INFO 5388 --- [ibm-doctor-service] [http-nio-9003-exec-5] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 96 ms
2024-04-21T19:34:19.652+05:30  INFO 5388 --- [ibm-doctor-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:39:19.657+05:30  INFO 5388 --- [ibm-doctor-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:40:12.577+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2024-04-21T19:40:12.577+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:40:12.577+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713708612577, current=DOWN, previous=UP]
2024-04-21T19:40:12.578+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:40:12.584+05:30  INFO 5388 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:40:12.590+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:40:15.598+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:40:15.614+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:40:15.617+05:30  INFO 5388 --- [ibm-doctor-service] [RMI TCP Connection(27)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:45:46.090+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Starting App using Java 17.0.10 with PID 13556 (D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service\target\classes started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:45:46.092+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:45:46.137+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-04-21T19:45:46.137+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-04-21T19:45:46.582+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:45:46.663+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 1 MongoDB repository interface.
2024-04-21T19:45:46.785+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=597a57aa-6309-31df-b4f0-51a7fb675092
2024-04-21T19:45:46.895+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:45:46.896+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.897+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.901+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.903+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.903+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$645/0x00000008005089f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.904+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.908+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.913+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.915+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.915+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.916+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.919+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.923+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.924+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.924+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.925+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:46.925+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:45:47.131+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9003 (http)
2024-04-21T19:45:47.138+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-04-21T19:45:47.139+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.19]
2024-04-21T19:45:47.176+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-04-21T19:45:47.177+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1039 ms
2024-04-21T19:45:47.295+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@55418c56, com.mongodb.Jep395RecordCodecProvider@7d5c60a4, com.mongodb.KotlinCodecProvider@62094d7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:45:47.310+05:30  INFO 13556 --- [ibm-doctor-service] [cluster-ClusterId{value='66251f93490c4354a2211ad8', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16654800}
2024-04-21T19:45:47.394+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-04-21T19:45:47.917+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:45:48.009+05:30  WARN 13556 --- [ibm-doctor-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:45:48.042+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:45:48.066+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:45:48.070+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:45:48.081+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:45:48.082+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:45:48.296+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:45:48.298+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:45:48.300+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:45:48.303+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713708948302 with initial instances count: 2
2024-04-21T19:45:48.304+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:45:48.304+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713708948304, current=UP, previous=STARTING]
2024-04-21T19:45:48.306+05:30  INFO 13556 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:45:48.337+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9003 (http) with context path ''
2024-04-21T19:45:48.338+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9003
2024-04-21T19:45:48.345+05:30  INFO 13556 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:45:48.430+05:30  INFO 13556 --- [ibm-doctor-service] [restartedMain] com.ibm.doctor.App                       : Started App in 2.68 seconds (process running for 3.173)
2024-04-21T19:46:03.132+05:30  INFO 13556 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-04-21T19:46:03.134+05:30  INFO 13556 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-04-21T19:46:03.138+05:30  INFO 13556 --- [ibm-doctor-service] [http-nio-9003-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-04-21T19:46:06.210+05:30  INFO 13556 --- [ibm-doctor-service] [http-nio-9003-exec-3] o.springdoc.api.AbstractOpenApiResource  : Init duration for springdoc-openapi is: 1875 ms
2024-04-21T19:47:10.353+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] inMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2024-04-21T19:47:10.354+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:47:10.354+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713709030354, current=DOWN, previous=UP]
2024-04-21T19:47:10.354+05:30  INFO 13556 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:47:10.366+05:30  INFO 13556 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:47:10.375+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:47:13.388+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:47:13.403+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:47:13.408+05:30  INFO 13556 --- [ibm-doctor-service] [RMI TCP Connection(11)-127.0.0.1] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-04-21T19:54:57.596+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.ibm.doctor.AppTests                  : Starting AppTests using Java 17.0.10 with PID 3244 (started by DELL in D:\VamanPro\Codes\ibm-3-apr-2024\sts-ibm-ws\clinic-management-apps\ibm-doctor-service)
2024-04-21T19:54:57.597+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.ibm.doctor.AppTests                  : No active profile set, falling back to 1 default profile: "default"
2024-04-21T19:54:59.367+05:30  INFO 3244 --- [ibm-doctor-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-04-21T19:54:59.594+05:30  INFO 3244 --- [ibm-doctor-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 217 ms. Found 1 MongoDB repository interface.
2024-04-21T19:54:59.977+05:30  INFO 3244 --- [ibm-doctor-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1a4ad54d-6f24-3710-8fc6-d4e934c91faa
2024-04-21T19:55:00.276+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-04-21T19:55:00.278+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.280+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.290+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.293+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.294+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$921/0x00000008005346f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.301+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.313+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.325+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.327+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.328+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.330+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.338+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.348+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.350+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.352+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.356+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.358+05:30  WARN 3244 --- [ibm-doctor-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-04-21T19:55:00.832+05:30  INFO 3244 --- [ibm-doctor-service] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Eclipse Adoptium/17.0.10+7"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2de3b052, com.mongodb.Jep395RecordCodecProvider@3f3c8b60, com.mongodb.KotlinCodecProvider@16bbaab3]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-04-21T19:55:00.888+05:30  INFO 3244 --- [ibm-doctor-service] [cluster-ClusterId{value='662521bc489bf87bcf273b48', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59978800}
2024-04-21T19:55:03.488+05:30  INFO 3244 --- [ibm-doctor-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-04-21T19:55:03.679+05:30  WARN 3244 --- [ibm-doctor-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-04-21T19:55:03.741+05:30  INFO 3244 --- [ibm-doctor-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-04-21T19:55:03.944+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-04-21T19:55:03.964+05:30  INFO 3244 --- [ibm-doctor-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-04-21T19:55:04.025+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-04-21T19:55:04.026+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-04-21T19:55:04.026+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-04-21T19:55:04.026+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-04-21T19:55:04.026+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-04-21T19:55:04.026+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-04-21T19:55:04.027+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-04-21T19:55:04.789+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-04-21T19:55:04.792+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-04-21T19:55:04.797+05:30  INFO 3244 --- [ibm-doctor-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-04-21T19:55:04.811+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1713709504808 with initial instances count: 1
2024-04-21T19:55:04.815+05:30  INFO 3244 --- [ibm-doctor-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application IBM-DOCTOR-SERVICE with eureka with status UP
2024-04-21T19:55:04.817+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713709504817, current=UP, previous=STARTING]
2024-04-21T19:55:04.824+05:30  INFO 3244 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:55:04.844+05:30  INFO 3244 --- [ibm-doctor-service] [main] com.ibm.doctor.AppTests                  : Started AppTests in 7.844 seconds (process running for 9.475)
2024-04-21T19:55:04.930+05:30  INFO 3244 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:55:06.516+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application IBM-DOCTOR-SERVICE with eureka with status DOWN
2024-04-21T19:55:06.517+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1713709506517, current=DOWN, previous=UP]
2024-04-21T19:55:06.517+05:30  INFO 3244 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003: registering service...
2024-04-21T19:55:06.523+05:30  INFO 3244 --- [ibm-doctor-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - registration status: 204
2024-04-21T19:55:06.536+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-04-21T19:55:09.541+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-04-21T19:55:09.556+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_IBM-DOCTOR-SERVICE/VAMUX:ibm-doctor-service:9003 - deregister  status: 200
2024-04-21T19:55:09.560+05:30  INFO 3244 --- [ibm-doctor-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
